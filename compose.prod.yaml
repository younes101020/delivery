services:
  web:
    build:
      dockerfile: ./apps/web/prod.Dockerfile
    environment:
      - AUTH_SECRET
      - JOBS_BEARER_TOKEN
      - JOBS_API_BASEURL
      - NEXT_PUBLIC_BASEURL
    volumes:
      - ./apps/web/src:/app/src
    restart: always
    ports:
      - 3000:3000
    networks:
      - host_network
    depends_on:
      - jobs
      - db

  jobs:
    build:
      context: .
      dockerfile: ./apps/jobs/prod.Dockerfile
    environment:
      - PORT
      - DATABASE_URL
      - DATABASE_AUTH_TOKEN
      - LOG_LEVEL
      - NODE_ENV
      - SSH_HOST
      - BEARER_TOKEN
    volumes:
      - /data/delivery/ssh/keys:/var/ssh/keys
    restart: always
    ports:
      - 3090:3090
    networks:
      - host_network
    depends_on:
      - db

  db:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD
    networks:
      - host_network
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${PWD}/db-data/:/var/lib/postgresql@16/data:rw
    restart: always
  
  bull_queue:
    image: redis
    container_name: delivery-bull-queue
    command: redis-server --save 60 1 --loglevel warning --maxmemory-policy noeviction --maxmemory 2gb
    restart: always
    ports:
      - 6379:6379
    networks:
      - host_network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - host_network

networks:
  host_network:
    name: host_network
    driver: bridge

volumes:
  postgres_data:
