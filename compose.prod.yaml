services:
  web:
    build:
      context: ./apps/web
      dockerfile: prod.Dockerfile
    environment:
      - AUTH_SECRET
      - BEARER_TOKEN
    volumes:
      - ./apps/web/src:/app/src
    restart: always
    ports:
      - 3000:3000
    networks:
      - host_network
    depends_on:
      - jobs
      - postgres

  jobs:
    build:
      context: ./apps/jobs
      dockerfile: prod.Dockerfile
    environment:
      - PORT
      - DATABASE_URL
      - DATABASE_AUTH_TOKEN
      - LOG_LEVEL
      - NODE_ENV
      - SSH_HOST
      - BEARER_TOKEN
    volumes:
      - /data/delivery/ssh/keys:/var/ssh/keys
    restart: always
    ports:
      - 3090:3090
    networks:
      - host_network
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432
    networks:
      - host_network

networks:
  host_network:
    name: host_network
    driver: bridge

volumes:
  postgres_data:
