name: Running UT/E2E and IT tests and release

on:
  push:
    branches:
      - main
      - next

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: test

    services:
      screenshots-storage:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
          - 9001:9001
        env:
          MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
          MINIO_SERVER_ACCESS_KEY: ${{ secrets.MINIO_SERVER_ACCESS_KEY }}
          MINIO_SERVER_SECRET_KEY: ${{ secrets.MINIO_SERVER_SECRET_KEY }}
          MINIO_DEFAULT_BUCKETS: ${{ vars.MINIO_DEFAULT_BUCKETS }}
          MINIO_ENDPOINT: ${{ vars.MINIO_ENDPOINT }}
        volumes:
          - ${{ github.workspace }}/data:/data
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"
      redis:
        image: redis
        ports:
          - 6379:6379
      db:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      JOBS_BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      PORT: ${{ vars.PORT }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}
      JOBS_API_BASEURL: ${{ vars.JOBS_API_BASEURL }}
      NEXT_PUBLIC_BASEURL: ${{ vars.NEXT_PUBLIC_BASEURL }}
      TEST_USERS_PASSWORD: ${{ secrets.TEST_USERS_PASSWORD }}
      MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
      MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
      MINIO_ENDPOINT: ${{ vars.MINIO_ENDPOINT }}
      MINIO_PORT: ${{ vars.MINIO_PORT }}
      MINIO_PUBLIC_DOMAIN: ${{ vars.MINIO_PUBLIC_DOMAIN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint
        run: yarn run lint

      - name: Build
        run: yarn run build

      - name: Run integration and unit tests
        run: yarn run test

  release:
    name: Release
    if: github.ref_name == 'main' || github.ref_name == 'next'
    runs-on: ubuntu-latest
    needs: [tests]
    environment: production

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      JOBS_BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      PORT: 9030
      LOG_LEVEL: silent
      JOBS_API_BASEURL: http://localhost:3090
      NEXT_PUBLIC_BASEURL: http://localhost:3000

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      
      - name: Release
        run: npx -p @semantic-release/exec semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        if: github.env.docker_publish == 'true'
        run: |
          docker compose -f compose.prod.yaml build
          docker compose -f compose.prod.yaml push