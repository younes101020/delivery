name: Tests

on:
  push:
    branches:
      - "*"

jobs:
  ci:
    name: Execute lint and tests
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
        
      # Since we can't pass arguments to redis runner service, we need to run it manually (ref: https://github.com/actions/runner/pull/1152)
      - name: Start Redis
        run: |
          docker run -d \
            --name redis \
            -p 6379:6379 \
            -e REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}" \
            redis:8.0.1 \
            redis-server --requirepass "${{ secrets.REDIS_PASSWORD }}" --save 60 1 --loglevel warning --maxmemory-policy noeviction --maxmemory 2gb
          # Wait for Redis to be ready
          for i in {1..10}; do
            if docker exec redis redis-cli -a "${{ secrets.REDIS_PASSWORD }}" ping | grep -q PONG; then
              echo "Redis is ready"
              break
            fi
            sleep 2
          done

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint

      - name: Integration and unit tests
        run: pnpm run test

    env:
      PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      JOBS_BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
      NODE_ENV: test
      PORT: ${{ vars.PORT }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}
      JOBS_API_BASEURL: ${{ vars.JOBS_API_BASEURL }}
      BASE_URL: ${{ vars.BASE_URL }}
      TEST_USERS_PASSWORD: ${{ secrets.TEST_USERS_PASSWORD }}
      MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
      MINIO_ENDPOINT: ${{ vars.MINIO_ENDPOINT }}
      MINIO_PORT: ${{ vars.MINIO_PORT }}
      MINIO_PUBLIC_DOMAIN: ${{ vars.MINIO_PUBLIC_DOMAIN }}
      MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
        
    services:
      screenshots-storage:
        image: bitnami/minio:2025.3.12
        ports:
          - 9000:9000
          - 9001:9001
        env:
          MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
          MINIO_SERVER_ACCESS_KEY: ${{ secrets.MINIO_SERVER_ACCESS_KEY }}
          MINIO_SERVER_SECRET_KEY: ${{ secrets.MINIO_SERVER_SECRET_KEY }}
          MINIO_DEFAULT_BUCKETS: ${{ vars.MINIO_DEFAULT_BUCKETS }}
          MINIO_ENDPOINT: ${{ vars.MINIO_ENDPOINT }}
        volumes:
          - ${{ github.workspace }}/data:/data
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"
      db:
        image: postgres:13.21-alpine3.20
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432